(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{280:function(t,a,e){t.exports=e.p+"assets/img/SelectionSort.cad847d1.png"},351:function(t,a,e){"use strict";e.r(a);var s=e(19),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"선택-정렬-selection-sort"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#선택-정렬-selection-sort"}},[t._v("#")]),t._v(" 선택 정렬 (Selection Sort)")]),t._v(" "),s("p",[s("em",[t._v("written by sohyeon, hyemin 💡")])]),t._v(" "),s("br"),t._v(" "),s("h2",{attrs:{id:"_1-선택-정렬이란"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-선택-정렬이란"}},[t._v("#")]),t._v(" 1. 선택 정렬이란?")]),t._v(" "),s("p",[s("code",[t._v("선택 정렬")]),t._v("은 가장 작은 요소부터 선택해 알맞은 위치로 옮겨서 순서대로 정렬하는 알고리즘이다.")]),t._v(" "),s("br"),t._v(" "),s("h2",{attrs:{id:"_2-동작-방식"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-동작-방식"}},[t._v("#")]),t._v(" 2. 동작 방식")]),t._v(" "),s("img",{attrs:{src:e(280),height:"400px"}}),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("1. 가장 작은 값의 요소인 1을 선택해 정렬을 시작하고, 6과 교환한다.\n2. 아직 정렬하지 않은 배열에서 가장 작은 요소인 3을 선택해 정렬을 시작하고, 배열의 첫 번째 요소인 4와 3을 교환한다.\n3~7. 위의 그림처럼 이 과정을 반복한다.\n")])])]),s("br"),t._v(" "),s("h2",{attrs:{id:"_3-특징"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-특징"}},[t._v("#")]),t._v(" 3. 특징")]),t._v(" "),s("h3",{attrs:{id:"_1-장점"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-장점"}},[t._v("#")]),t._v(" 1) 장점")]),t._v(" "),s("ul",[s("li",[t._v("자료 이동 횟수가 미리 결정된다.")])]),t._v(" "),s("h3",{attrs:{id:"_2-단점"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-단점"}},[t._v("#")]),t._v(" 2) 단점")]),t._v(" "),s("ul",[s("li",[t._v("선택 정렬 알고리즘은 안정적이지 않다.\n"),s("ul",[s("li",[t._v("즉, 요솟값이 중복될 경우 상대적인 위치가 변경될 수 있다.")])])])]),t._v(" "),s("br"),t._v(" "),s("h2",{attrs:{id:"_4-시간복잡도"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-시간복잡도"}},[t._v("#")]),t._v(" 4. 시간복잡도")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("비교 횟수")]),t._v(" "),s("ul",[s("li",[t._v("두 개의 for 루프의 실행 횟수")]),t._v(" "),s("li",[t._v("외부 루프 : (n-1)번")]),t._v(" "),s("li",[t._v("내부 루프(최솟값 찾기) : 0에서 n-2까지 변하는 i에 대하여 "),s("code",[t._v("(n-1)-i번")]),t._v(" (n-1, n-2, ... , 2, 1번)")])])]),t._v(" "),s("li",[s("p",[t._v("교환 횟수")]),t._v(" "),s("ul",[s("li",[t._v("외부 루프의 실행 횟수와 동일하다.")]),t._v(" "),s("li",[t._v("한 번 교환하기 위하여 3번의 이동이 필요하므로 전체 이동 횟수는 "),s("code",[t._v("3(n-1)번")])])])])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("T(n) = (n-1) + (n-2) + ... + 1 = n(n-1)/2 = O(n^2)\n")])])]),s("br"),t._v(" "),s("h2",{attrs:{id:"_5-선택-정렬-java-코드"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-선택-정렬-java-코드"}},[t._v("#")]),t._v(" 5. 선택 정렬 Java 코드")]),t._v(" "),s("h3",{attrs:{id:"선택-정렬-selectionsort-의-교환-과정"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#선택-정렬-selectionsort-의-교환-과정"}},[t._v("#")]),t._v(" 선택 정렬(SelectionSort)의 교환 과정")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("1. 아직 정렬하지 않은 부분에서 가장 작은 키의 값(a[min])을 선택한다.  \n2. a[min]과 아직 정렬하지 않은 부분의 첫 번째 요소를 교환한다.\n")])])]),s("h4",{attrs:{id:"ex-예제"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ex-예제"}},[t._v("#")]),t._v(" ex) 예제")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("// 단순 선택 정렬\nstatic void selectionSort(int[] a, int n) {\n    for (int i = 0; i < n - 1; i++) {\n        int min = i;           // 아직 정렬되지 않은 부분에서 가장 작은 요소의 인덱스를 기록한다.\n        for (int j = i + 1; j < n; j++)\n            if(a[j] < a[min])\n            min = j;\n        if(i != min)\n            swap(a, i, min);   // 아직 정렬되지 않은 부분의 첫 요소와 가장 작은 요소를 교환한다. \n    }\n}\n")])])]),s("p",[t._v("단순 선택 정렬 알고리즘의 요솟값을 비교하는 횟수는 "),s("code",[t._v("(n^2-n)/2")]),t._v("회이다.")]),t._v(" "),s("p",[t._v("최솟값이 자기 자신이면 자료 이동을 하지 않도록 한다.")]),t._v(" "),s("ul",[s("li",[t._v("일반적으로 비교 연산 1개가 이동 연산 3개보다 시간이 적게 걸리므로 효과적이다.")])]),t._v(" "),s("br"),t._v(" "),s("h2",{attrs:{id:"reference-additional-resources"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reference-additional-resources"}},[t._v("#")]),t._v(" Reference & Additional Resources")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Do it! 자료구조와 함께 배우는 알고리즘 입문 자바편")])]),t._v(" "),s("li",[s("p",[t._v("C언어로 쉽게 풀어쓴 자료 구조")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);